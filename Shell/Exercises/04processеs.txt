5000 - Намерете командите на 10-те най-стари процеси в системата.

ps -e -o cmd= --sort start_time | head

6000 - Намерете PID и командата на процеса, който заема най-много виртуална памет в системата.

ps -e -o  pid=,cmd= --sort vsz | tail -n 1

6300 - Изведете командата на най-стария процес

ps -e -o cmd= --sort start_time | head 

5000b - Намерете колко физическа памет заемат всички процеси на потребителската група root.

ps -u root -o rss= | paste -sd+ - | bc 
ps -u root -o rsz= | paste -sd+ - | bc 

6100 - Изведете имената на потребителите, които имат поне 2 процеса, чиято команда е vim 
(независимо какви са аргументите й)

ps -e -C vim -o user= | sort | uniq -c | awk '$1 >= 2 { print $2 }'

6200 - Изведете имената на потребителите, които не са логнати в момента, но имат живи процеси

ps -e -o user= | sort | uniq | grep -v "$(who | cut -d' ' -f1 | sort | uniq)" | sort | uniq

7000 - Намерете колко физическа памет заемат осреднено всички процеси на потребителската група root. 
Внимавайте, когато групата няма нито един процес.

if [ $(pgrep -c -u root) -gt 0 ]; then echo $(( $(ps -u root -o rss= | paste -sd+ | bc) / 
$(ps -u root -o rss= | wc -l) )); else echo "No root processes running"; fi

8000 - Намерете всички PID и техните команди (без аргументите), които нямат tty, което ги управлява.
Изведете списък само с командите без повторения.

ps -e -o pid=,comm=,tty= | awk '$3=="?" {print $1,$2}' | cut -d' ' -f2 | sort | uniq

9000 - Да се отпечатат PID на всички процеси, които имат повече деца от родителския си процес.

ps -e -o ppid=,pid= | awk '{count[$1]++} END {for (pid in count) if (count[pid] < count[$pid]) 
print pid}'