#Зад. 32 2018-SE-03 Напишете скрипт, който приема два позиционни аргумента – имена на текстови файлове в CSV формат:
#8,foo,bar,baz
#2,quz,,foo
#12,1,3,foo
#3,foo,,
#5,,bar,
#7,,,
#4,foo,bar,baz
#Валидни са следните условия:
#• CSV файловете представляват таблица, като всеки ред на таблицата е записан на отделен ред;
#• на даден ред всяко поле (колона) е разделено от останалите със запетая;
#• броят на полетата на всеки ред е константа;
#• в полетата не може да присъства запетая, т.е., запетаята винаги е разделител между полета;
#• ако във файла присъстват интервали, то това са данни от дадено поле;
#• първото поле на всеки ред е число, което представлява идентификатор на реда (ID).
#Примерно извикване: ./foo.sh a.csv b.csv
#Скриптът трябва да чете a.csv и на негова база да създава b.csv по следния начин:
#• някои редове във файла се различават само по колоната ID, и за тях казваме, че формират множество Ai
#• за всяко такова множество Ai да се оставя само един ред - този, с най-малка стойност на ID-то;
#• редовете, които не са членове в някое множество Ai се записват в изходния файл без промяна.

#!/bin/bash

if [[ $# -ne 2 ]];then
	echo "wrong input"
	exit 1
fi

if ! [[ "$1" =~ ^[a-zA-Z-]+\.csv$ ]] || ! [[ "$2" =~ ^[a-zA-Z-]+\.csv$ ]]; then
	echo "not strings"
	exit 2
fi

if  [[ ! -f "$1"  ]] ||  [[ ! -f "$2"  ]]; then
	echo "not files"
	exit 3
fi

first=$1;
second=$2;

cat $first | sort -t',' -k2 -k1,1n | while read line; do
	columns=$(echo $line | cut -d',' -f2-)
	if [ "$columns" != "$prev" ]; then
		echo "$line" >> $second;
		prev="$columns"	
	fi

done